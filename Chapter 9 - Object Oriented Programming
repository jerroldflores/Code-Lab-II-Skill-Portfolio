Exercise 1 - Woof Woof
#include <iostream>

using namespace std;

class Dog 
{
public:
    string name, colour, breed;
    int age = 0;
    
    void sayWoof() {
        cout << "Woof My name is " << name << "." << endl;
    }
    
}dog1, dog2;

int main() {
    Dog dog1{ "Fluff", "Cream", "Pomeranian", 2 };
    
    cout <<"Name:" << dog1.name << endl;
    cout <<"Colour:" << dog1.colour << endl;
    cout <<"Breed:" << dog1.breed << endl;
    cout <<"Age:" << dog1.age << "\n\n";
    
    Dog dog2{ "Bean", "Brown", "Yorkipoo", 1 };
    
    cout <<"Name:" << dog2.name << endl;
    cout <<"Colour:" << dog2.colour << endl;
    cout <<"Breed:" << dog2.breed << endl;
    cout <<"Age:" << dog2.age << "\n\n";
    
    if (dog1.age > dog2.age) 
    {
        dog1.sayWoof();
    }
    else 
    {
        dog2.sayWoof();
    }
    
    return 0;
}

Exercise 2 - Playing around in class

Exercise 3 - Students Class
#include <iostream>
using namespace std;
 
#define MAX 10
 
class student
{
    private:
        char  name[30];
        int   rollNo;
        int   total;
        float perc;
    public:
        //member function to get student's details
        void getDetails(void);
        //member function to print student's details
        void putDetails(void);
};
 
//member function definition, outside of the class
void student::getDetails(void){
    cout << "Enter name: " ;
    cin >> name;
    cout << "Enter roll number: ";
    cin >> rollNo;
    cout << "Enter total marks outof 500: ";
    cin >> total;
     
    perc=(float)total/500*100;
}
 
//member function definition, outside of the class
void student::putDetails(void){
    cout << "Student details:\n";
    cout << "Name:"<< name << ",Roll Number:" << rollNo << ",Total:" << total << ",Percentage:" << perc;
}
 
int main()
{
    student std[MAX];       //array of objects creation
    int n,loop;
     
    cout << "Enter total number of students: ";
    cin >> n;
     
    for(loop=0;loop< n; loop++){
        cout << "Enter details of student " << loop+1 << ":\n";
        std[loop].getDetails();
    }
     
    cout << endl;
     
    for(loop=0;loop< n; loop++){
        cout << "Details of student " << (loop+1) << ":\n";
        std[loop].putDetails();
    }
     
    return 0;
}

Exercise 4 - Data Class
#include <iostream>

using namespace std;

class Box {
   public:
      double length;   // Length of a box
      double breadth;  // Breadth of a box
      double height;   // Height of a box
};

int main() {
   Box Box1;        // Declare Box1 of type Box
   Box Box2;        // Declare Box2 of type Box
   double volume = 0.0;     // Store the volume of a box here
 
   // box 1 specification
   Box1.height = 5.0; 
   Box1.length = 6.0; 
   Box1.breadth = 7.0;

   // box 2 specification
   Box2.height = 10.0;
   Box2.length = 12.0;
   Box2.breadth = 13.0;
   
   // volume of box 1
   volume = Box1.height * Box1.length * Box1.breadth;
   cout << "Volume of Box1 : " << volume <<endl;

   // volume of box 2
   volume = Box2.height * Box2.length * Box2.breadth;
   cout << "Volume of Box2 : " << volume <<endl;
   return 0;
}

Exercise 5 - This
Exercise 6 - Hide and Seek
Exercise 7 - Inheritance
Exercise 8 - Playing with Polly

Exercise 9 - Employee Data
#include <iostream>
#include <conio.h>

using namespace std;
class employee
{
private:
    //data members fall under the private section of the  class
    int empmno;
    char name[50];
    float sal;
public;
    //member functions fall under the public section
    void getempdetails()
    {
        cout <<"\n\n\t Enter the Employee number :- ";
        cin >>empmno
        cout <<"\n\n\t Enter the Employee name   :- ";
        cin >>name;
        cout << "\n\n\t Enter the Employee salary:- ";
        cin >> sal;
    }
    void showempdata()
    {
        cout << "Employee Details..,";
        cout << "\n\n\t The name for the employee:- " << name;
        cout << "\n\n\t The employee number      :- " << empmno;
        cout << "\n\n\t The Salary of the employee:- " << sal;
    }
};
void main()
{
    //creating an object for our class employee
    employee el;
    el.getempdetails();//calling the member functions using the object el;
    el.showempdata();
    _getch();
}
